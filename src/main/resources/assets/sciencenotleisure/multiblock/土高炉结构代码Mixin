@Mixin(value = MTEPrimitiveBlastFurnace.class, remap = false)
public abstract class MTEPrimitiveBlastFurnaceMixin extends MetaTileEntity
    implements IAlignment, ISurvivalConstructable, RecipeMapWorkable, IAddUIWidgets, IGetTitleColor {

    public MTEPrimitiveBlastFurnaceMixin(int aID, String aBasicName, String aRegionalName, int aInvSlotCount) {
        super(aID, aBasicName, aRegionalName, aInvSlotCount);
    }
    @Inject(
        method = "lambda$static$0",
        at = @At("HEAD"),
        cancellable = true
    )
    private static void injectComputeValue(Class<?> type, CallbackInfoReturnable<IStructureDefinition<MTEPrimitiveBlastFurnace>> cir) {
        // 自定义结构定义
        String[][] structure = StructureUtils.transposeStructure(
            StructureUtils.readStructureFromFile("modid:path_to_structure_file")
        );

        IStructureDefinition<MTEPrimitiveBlastFurnace> customStructure = IStructureDefinition.<MTEPrimitiveBlastFurnace>builder()
            .addShape(
                "main",
                structure
            )
            .addElement('A', ofBlock(sBlockCasings3, 13))
            .addElement('B', ofBlock(sBlockCasings4, 15))
            .addElement('C', ofFrame(Materials.Plutonium))
            .addElement('D', ofBlock(ModBlocks.blockCasings2Misc, 0))
            .addElement('E', ofBlockAnyMeta(Blocks.stonebrick))
            .build();

        cir.setReturnValue(customStructure);
    }
}
