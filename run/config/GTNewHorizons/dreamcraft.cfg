# Configuration file

debug {
    # Enable debug output to fml-client-latest.log [default: false]
    B:DoDebugMessages=false
}


deepdarkvoidminer {
    # Set to true to enable logging of ores added to the Deep Dark void miner, with weights and metadata IDs. This is useful for debugging. [default: false]
    B:DebugPrintAddedOres=false

    # Set to true to enable logging of all valid ores. This is useful for debugging, or finding names to add to the weight config. [default: false]
    B:DebugPrintAllOres=false

    # List of GT++ material names to adjust weight. Example line: "Cerite : 0.3". Intervening whitespace will be ignored. Use the debug options to get valid names. Use weight <= 0 to disable an ore entirely. Anything not specified in the list will have weight 1. See: gtPlusPlus.core.material.ORES [default: ]
    S:GTPPMaterialWeights <
     >

    # List of GregTech material names to adjust weight. Example line: "Aluminium : 0.3". Intervening whitespace will be ignored. Use the debug options to get valid names. Use weight <= 0 to disable an ore entirely. Anything not specified in the list will have weight 1. See: gregtech.api.enums.Materials [default: ]
    S:MaterialWeights <
     >

    # List of BartWorks material names to adjust weight. Example line: "Bismutite : 0.3". Intervening whitespace will be ignored. Use the debug options to get valid names. Use weight <= 0 to disable an ore entirely. Anything not specified in the list will have weight 1. See: bartworks.system.material.Werkstoff [default: ]
    S:WerkstoffWeights <
     >
}


modfixes {
    # Set to true to enable the modfix for Avaritia SkullFireSword [default: false]
    B:AvaritiaFixEnabled=false

    # Set to true to enable OilSpawn from this Mod. Make sure to disable Oil-Spawn in BuildCraft if you do [default: false]
    B:GenerateOil=false

    # Set to true to allow Minetweaker to override the vanilla furnace fuel handler, allowing the burn value of WOOD material items to be changed. [default: true]
    B:MinetweakerFurnaceFixEnabled=true

    avaritia {
        # The Canonical Class-Name of the Entity [default: [net.minecraft.entity.monster.EntitySkeleton], [galaxyspace.SolarSystem.planets.venus.entities.EntityEvolvedFireSkeleton], [micdoodle8.mods.galacticraft.core.entities.EntityEvolvedSkeleton]]
        S:Avaritia_SkullFireSwordEntityTargets <
            net.minecraft.entity.monster.EntitySkeleton
            galaxyspace.SolarSystem.planets.venus.entities.EntityEvolvedFireSkeleton
            micdoodle8.mods.galacticraft.core.entities.EntityEvolvedSkeleton
         >
    }

    ##########################################################################################################
    # oilgen
    #--------------------------------------------------------------------------------------------------------#
    # The OilgenChance is based on height of the biome. On high-y biomes, the basic chance is divided by 2, on low-y biomes like oceans, it is multiplied by 1.8.
    # The multiplier set here for -OilBoostBiomes- Biomes is applied after those multipliers are set.
    ##########################################################################################################

    oilgen {
        # Boost factor of oil spheres in certain Biomes that are listed in -OilBoostBiomes- [range: 0.0 ~ 50.0, default: 2.5]
        S:OilBiomeBoostFactor=2.5

        # List BiomeIDs (Numbers only; One per line!) where no oil should be generated [default: ]
        S:OilBiomeIDBlackList <
         >

        # List BiomeIDs (Numbers only; One per line!) where the boost multiplicator is applied. Leave empty to disable Biome-Boost [default: ]
        S:OilBoostBiomes <
         >

        # Threshold at which an oil-deposit will be considered as 'large' and the fountain will be higher and thicker. [range: 0 ~ 100, default: 14]
        I:OilDepositThresholdLarge=14

        # Threshold at which an oil-deposit will be considered as 'medium' and the fountain will be higher and thicker. [range: 0 ~ 100, default: 11]
        I:OilDepositThresholdMedium=11

        # The minimum distance of 2 Oil-Deposits in chunks. Modulo-Based; A 2 here means an deposit can only spawn in chunks that have a number that is a multiple of 2 (Chunknumber * 16 = X/Z coord) [range: 0 ~ 1024, default: 2]
        I:OilDepostMinDistance=2

        # List DimensionIDs (Numbers only; One per line!) here where the OilGenerator should do its work [default: [0]]
        S:OilDimensionWhitelist <
            0
         >

        # Visible height of the fountain above the oil-deposit for LARGE deposits [range: 0 ~ 100, default: 16]
        I:OilFountainSizeLarge=16

        # Visible height of the fountain above the oil-deposit for MEDIUM deposits [range: 0 ~ 100, default: 5]
        I:OilFountainSizeSmall=5

        # General OilGen factor [range: 0.0 ~ 2000.0, default: 30.0]
        S:OilSphereChance=30.0

        # The maximum radius of an underground OilSphere. The final size is calculated by OilSphereMinRadius + Random(OilSphereMaxSize-OilSphereMinRadius) [range: 3 ~ 50, default: 15]
        I:OilSphereMaxSize=15

        # The minimum radius of an underground OilSphere [range: 0 ~ 20, default: 8]
        I:OilSphereMinRadius=8
    }

}


modules {
    # If set to true, every op/admin will receive all errors occoured during the startup phase as ingame message on join [default: true]
    B:AdminErrorLog=true

    # A complete, full working example for a custom chest, with its own renderer for items and blocks, custom sound and a GUI [default: true]
    B:BabyChest=true

    # Set to true to enable CustomDrops module. This needs a separate config file which is created once you start with this setting enabled [default: false]
    B:CustomDrops=false

    # Set to true to enable CustomFuels module. Allows you to set burn-time values to almost any item [default: false]
    B:CustomFuels=false

    # Set to true to enable CustomToolTips module. This needs a separate config file which is created once you start with this setting enabled [default: false]
    B:CustomToolTips=false

    # Set to true to display modpack version on debug GUI (F3) [default: true]
    B:DebugVersionDisplay=true

    # Enables crafting recipes for Forestry stamps and Chunk Loader Coins. Only works on single player [default: true]
    B:ForestryStampsAndChunkLoaderCoinsEnabled=true

    # Enables crafting recipes for Forestry stamps and Chunk Loader Coins on server [default: false]
    B:ForestryStampsAndChunkLoaderCoinsServerEnabled=false

    # Set to true to enable HazardousItems module. This needs a separate config file which is created once you start with this setting enabled [default: false]
    B:HazardousItems=false

    # Set to true to enable ItemInHandInfo module. If enabled, type /iih to display the item's name-info [default: false]
    B:ItemInHandInfo=false

    # Set to true to show login message with modpack version [default: true]
    B:LoginMessage=true

    # Version of the Modpack [default: 2.7.0]
    S:ModPackVersion=2.7.0

    # Set to false to prevent the OreDict register for SpaceStones and SpaceDusts [default: true]
    B:OreDictItems=true

    worldaccelerator {
        # The Canonical Class-Names of TileEntities that should be ignored by the WorldAccelerator [default: [com.rwtema.extrautils.tileentity.enderquarry.TileEntityEnderQuarry]]
        S:BlacklistedTileEntiyClassNames <
            com.rwtema.extrautils.tileentity.enderquarry.TileEntityEnderQuarry
         >
    }

}


pollution {
    # the threshold of pollution above which the electric air filters will start to work [range: 0 ~ 2147483647, default: 10000]
    I:PollutionThresholdAirFilter=10000

    # T1 bonus tier in this formula: globalMultiplicator * bonusByTier * mufflerAmount * turbineEfficiency * maintenanceEff * Floor(scalingFactor^effectiveTier). This gives the pollution cleaned by the electric air filter per second [range: 0.0 ~ 100.0, default: 1.0]
    S:bonusByTierT1=1.0

    # T2 bonus tier in this formula: globalMultiplicator * bonusByTier * mufflerAmount * turbineEfficiency * maintenanceEff * Floor(scalingFactor^effectiveTier). This gives the pollution cleaned by the electric air filter per second [range: 0.0 ~ 100.0, default: 1.05]
    S:bonusByTierT2=1.05

    # T3 bonus tier in this formula: globalMultiplicator * bonusByTier * mufflerAmount * turbineEfficiency * maintenanceEff * Floor(scalingFactor^effectiveTier). This gives the pollution cleaned by the electric air filter per second [range: 0.0 ~ 100.0, default: 1.1]
    S:bonusByTierT3=1.1

    # boost applied when a filter has been set in the electric air filter. [range: 1.0 ~ 100.0, default: 2.0]
    S:boostPerAbsorptionFilter=2.0

    # global multiplicator in this formula: globalMultiplicator * bonusByTier * mufflerAmount * turbineEfficiency * maintenanceEff * Floor(scalingFactor^effectiveTier). This gives the pollution cleaned by the electric air filter per second [range: 0.0 ~ 100.0, default: 30.0]
    S:globalMultiplicator=30.0

    # scaling factor in this formula: globalMultiplicator * bonusByTier * mufflerAmount * turbineEfficiency * maintenanceEff * Floor(scalingFactor^effectiveTier). This gives the pollution cleaned by the electric air filter per second [range: 0.0 ~ 100.0, default: 2.5]
    S:scalingFactor=2.5

    # Number of usage per absorption filter. [range: 1 ~ 100, default: 30]
    I:usagesPerAbsorptionFilter=30
}


